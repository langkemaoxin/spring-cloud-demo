server:
  port: 8096
spring:
  application:
    name: lagou-service-autodeliver

eureka:
  client:
    service-url:
      # 注册集群，就把多个Eureka地址 使用逗号链接起来即可
      defaultZone: http://LagouCloudEurekaServerA:8761/eureka,http://LagouCloudEurekaServerB:8762/eureka
  instance:
    prefer-ip-address: true # 服务实例中显示IP，而不是显示主机名
    # ip-address: 192.168.56.1
    # 自定义实例名称
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@

#针对的被调⽤⽅微服务名称,不加就是全局⽣效
lagou-service-resume:
  ribbon:
   #请求连接超时时间
   ConnectTimeout: 2000

   #请求处理超时时间
   ReadTimeout: 15000

   #对所有操作都进⾏重试
   OkToRetryOnAllOperations: true

   ####根据如上配置，当访问到故障请求的时候，它会再尝试访问⼀次当前实例（次数由MaxAutoRetries配置），
   ####如果不⾏，就换⼀个实例进⾏访问，如果还不⾏，再换⼀次实例访问（更换次数由MaxAutoRetriesNextServer配置），
   ####如果依然不⾏，返回失败信息。

   MaxAutoRetries: 0 #对当前选中实例重试次数，不包括第⼀次调⽤
   MaxAutoRetriesNextServer: 0 #切换实例的重试次数
   NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #负载策略调整

   ##NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #负载策略调整


# springboot中暴露健康检查等断点接⼝
management:
  endpoints:
   web:
    exposure:
     include: "*"
  # 暴露健康接⼝的细节
  endpoint:
   health:
    show-details: always

# 全局⽣效
#ribbon:
#  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #负载策略调整

logging:
  level:
  # Feign⽇志只会对⽇志级别为debug的做出响应
   com.lagou.edu.service.ResumeServiceFeignClient: debug

# 开启Feign的熔断功能
feign:
  hystrix:
   enabled: true

hystrix:
  command:
   default:
    execution:
     isolation:
      thread:
       ##########################################Hystrix的超时时⻓设置
       timeoutInMilliseconds: 15000